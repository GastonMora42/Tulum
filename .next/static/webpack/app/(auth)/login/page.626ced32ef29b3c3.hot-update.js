"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(auth)/login/page",{

/***/ "(app-pages-browser)/./src/server/services/auth/authService.ts":
/*!*************************************************!*\
  !*** ./src/server/services/auth/authService.ts ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthService: () => (/* binding */ AuthService),\n/* harmony export */   authService: () => (/* binding */ authService),\n/* harmony export */   refreshToken: () => (/* binding */ refreshToken)\n/* harmony export */ });\n/* harmony import */ var _server_db_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/server/db/client */ \"(app-pages-browser)/./src/server/db/client.ts\");\n/* harmony import */ var _cognitoService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cognitoService */ \"(app-pages-browser)/./src/server/services/auth/cognitoService.ts\");\n// src/server/services/auth/authService.ts\n\n\n// Servicio de autenticación que actúa como fachada para Cognito\nclass AuthService {\n    // Login\n    async login(credentials) {\n        try {\n            // Autenticar con Cognito\n            const cognitoResult = await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.login(credentials);\n            // Buscar usuario en nuestra BD\n            let user = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.findFirst({\n                where: {\n                    email: credentials.email\n                },\n                include: {\n                    role: true\n                }\n            });\n            console.log('Usuario encontrado:', user);\n            console.log('Rol del usuario:', user === null || user === void 0 ? void 0 : user.role);\n            // Si no existe el usuario, lo creamos\n            if (!user) {\n                console.log(\"Usuario no encontrado en BD local, creando...\");\n                // Buscar primero un rol (preferiblemente admin)\n                let role = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].role.findFirst({\n                    where: {\n                        name: 'admin'\n                    }\n                });\n                // Si no existe ningún rol, necesitamos crear al menos uno\n                if (!role) {\n                    console.log(\"Creando rol 'admin' porque no existe\");\n                    role = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].role.create({\n                        data: {\n                            name: 'admin',\n                            permissions: [\n                                '*'\n                            ] // Todos los permisos como JSON\n                        }\n                    });\n                }\n                // Crear el usuario con el rol encontrado o creado\n                user = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.create({\n                    data: {\n                        id: cognitoResult.user.id,\n                        email: credentials.email,\n                        name: cognitoResult.user.name || credentials.email.split('@')[0],\n                        roleId: role.id\n                    },\n                    include: {\n                        role: true\n                    }\n                });\n                console.log(\"Usuario creado exitosamente:\", user.id);\n            }\n            // Devolvemos el resultado combinado\n            return {\n                ...cognitoResult,\n                user: {\n                    ...user,\n                    // Asegurarse de que usamos los datos de nuestra BD\n                    id: user.id,\n                    roleId: user.roleId\n                }\n            };\n        } catch (error) {\n            console.error('Error en login:', error);\n            throw error; // Propagar el error para que el cliente pueda manejarlo\n        }\n    }\n    // Cerrar sesión\n    async logout(accessToken) {\n        try {\n            await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.logout(accessToken);\n            return true;\n        } catch (error) {\n            console.error('Error en logout:', error);\n            return false;\n        }\n    }\n    // Refrescar token\n    async refreshUserToken(refreshToken, email) {\n        try {\n            return await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.refreshToken(refreshToken, email);\n        } catch (error) {\n            console.error('Error al refrescar token:', error);\n            return null;\n        }\n    }\n    // Obtener usuario por ID\n    async getUserById(userId) {\n        try {\n            const user = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.findUnique({\n                where: {\n                    id: userId\n                },\n                include: {\n                    role: true\n                }\n            });\n            if (!user) return null;\n            return user;\n        } catch (error) {\n            console.error('Error al obtener usuario:', error);\n            return null;\n        }\n    }\n    // Crear usuario (admin)\n    async createUser(userData) {\n        try {\n            // Verificar que el rol existe\n            const roleExists = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].role.findUnique({\n                where: {\n                    id: userData.roleId\n                }\n            });\n            if (!roleExists) {\n                throw new Error(\"El rol con ID \".concat(userData.roleId, \" no existe\"));\n            }\n            // Si se proporciona sucursalId, verificar que existe\n            if (userData.sucursalId) {\n                const sucursalExists = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ubicacion.findUnique({\n                    where: {\n                        id: userData.sucursalId\n                    }\n                });\n                if (!sucursalExists) {\n                    throw new Error(\"La ubicaci\\xf3n con ID \".concat(userData.sucursalId, \" no existe\"));\n                }\n            }\n            // Crear usuario en Cognito\n            await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.createUser({\n                email: userData.email,\n                name: userData.name,\n                password: userData.password,\n                roleId: userData.roleId\n            });\n            // Crear usuario en nuestra BD\n            const user = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].user.create({\n                data: {\n                    email: userData.email,\n                    name: userData.name,\n                    roleId: userData.roleId,\n                    sucursalId: userData.sucursalId || null\n                }\n            });\n            return user;\n        } catch (error) {\n            console.error('Error al crear usuario:', error);\n            throw error;\n        }\n    }\n    // Registrar un nuevo usuario\n    async registerUser(userData) {\n        try {\n            // Registrar en Cognito\n            const cognitoResult = await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.registerUser({\n                email: userData.email,\n                name: userData.name,\n                password: userData.password\n            });\n            if (!cognitoResult.success) {\n                return {\n                    success: false,\n                    message: cognitoResult.message || 'Error al registrar usuario en Cognito',\n                    userId: cognitoResult.userId\n                };\n            }\n            return {\n                success: true,\n                message: cognitoResult.message || 'Usuario registrado exitosamente',\n                userId: cognitoResult.userId\n            };\n        } catch (error) {\n            console.error('Error en registro:', error);\n            return {\n                success: false,\n                message: 'Error al registrar usuario'\n            };\n        }\n    }\n    // Confirmar registro\n    async confirmRegistration(email, code) {\n        try {\n            return await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.confirmRegistration(email, code);\n        } catch (error) {\n            console.error('Error al confirmar registro:', error);\n            return {\n                success: false,\n                message: 'Error al confirmar el registro'\n            };\n        }\n    }\n    // Reenviar código de confirmación\n    async resendConfirmationCode(email) {\n        try {\n            return await _cognitoService__WEBPACK_IMPORTED_MODULE_1__.cognitoService.resendConfirmationCode(email);\n        } catch (error) {\n            console.error('Error al reenviar código:', error);\n            return {\n                success: false,\n                message: 'Error al reenviar el código de verificación'\n            };\n        }\n    }\n}\n// Singleton para uso en la aplicación\nconst authService = new AuthService();\n// Función para el cliente (frontend)\nasync function refreshToken() {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) return false;\n    try {\n        const response = await fetch('/api/auth/refresh', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                refreshToken\n            })\n        });\n        if (!response.ok) return false;\n        const data = await response.json();\n        // Actualizar tokens\n        localStorage.setItem('accessToken', data.accessToken);\n        localStorage.setItem('idToken', data.idToken);\n        return true;\n    } catch (error) {\n        console.error('Error al refrescar token:', error);\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/server/services/auth/authService.ts\n"));

/***/ })

});