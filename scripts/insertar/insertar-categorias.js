// scripts/insertar-categorias.js
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

// Categor√≠as basadas en el Excel (las que est√°n en gris)
const categorias = [
  { nombre: 'Difusores' },
  { nombre: 'Velas Arom√°ticas' },
  { nombre: 'Aceites Esenciales' },
  { nombre: 'Sahumerios' },
  { nombre: 'Inciensos' },
  { nombre: 'Quemadores' },
  { nombre: 'Sets Arom√°ticos' },
  { nombre: 'Aceites Vegetales' },
  { nombre: 'Cosm√©ticos Naturales' },
  { nombre: 'Sales de Ba√±o' },
  // Agregar m√°s categor√≠as seg√∫n aparezcan en tu Excel
];

async function insertarCategorias() {
  console.log('üè∑Ô∏è Iniciando inserci√≥n de categor√≠as...');
  
  try {
    let insertadas = 0;
    let omitidas = 0;
    
    for (const categoriaData of categorias) {
      try {
        // Verificar si ya existe
        const existente = await prisma.categoria.findUnique({
          where: { nombre: categoriaData.nombre }
        });
        
        if (existente) {
          console.log(`‚è≠Ô∏è Categor√≠a "${categoriaData.nombre}" ya existe, omitiendo...`);
          omitidas++;
          continue;
        }
        
        // Crear nueva categor√≠a
        const categoria = await prisma.categoria.create({
          data: categoriaData
        });
        
        console.log(`‚úÖ Categor√≠a creada: ${categoria.nombre} (ID: ${categoria.id})`);
        insertadas++;
        
      } catch (error) {
        console.error(`‚ùå Error al crear categor√≠a "${categoriaData.nombre}":`, error.message);
      }
    }
    
    console.log(`\nüìä Resumen de categor√≠as:`);
    console.log(`   ‚úÖ Insertadas: ${insertadas}`);
    console.log(`   ‚è≠Ô∏è Omitidas: ${omitidas}`);
    console.log(`   üìù Total procesadas: ${categorias.length}`);
    
  } catch (error) {
    console.error('‚ùå Error general:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Funci√≥n para listar categor√≠as existentes
async function listarCategorias() {
  try {
    const categorias = await prisma.categoria.findMany({
      orderBy: { nombre: 'asc' }
    });
    
    console.log('\nüìã Categor√≠as en la base de datos:');
    categorias.forEach((cat, index) => {
      console.log(`   ${index + 1}. ${cat.nombre} (ID: ${cat.id})`);
    });
    
    return categorias;
  } catch (error) {
    console.error('‚ùå Error al listar categor√≠as:', error);
    return [];
  }
}

// Ejecutar si es llamado directamente
if (require.main === module) {
  insertarCategorias()
    .then(() => listarCategorias())
    .then(() => {
      console.log('\nüéâ Proceso de categor√≠as completado');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error en el proceso:', error);
      process.exit(1);
    });
}

module.exports = { insertarCategorias, listarCategorias };